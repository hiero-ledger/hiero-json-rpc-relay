name: Build Image Test

on:
  pull_request:
    branches: [main, release/**]

permissions:
  contents: read

jobs:
  build:
    runs-on: hiero-smart-contracts-linux-medium

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Docker Qemu
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1
        with:
          version: v0.22.0
          driver-opts: network=host
          buildkitd-config-inline: |
            [registry."docker.io"]
              mirrors = ["https://hub.mirror.docker.lat.ope.eng.hashgraph.io"]

      - name: Build image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          push: false
          load: true
          tags: relay:latest

      - name: Start server
        run: |
          docker run \
            -e CHAIN_ID='0x12a' \
            -e HEDERA_NETWORK='{"127.0.0.1:50211":"0.0.3"}' \
            -e MIRROR_NODE_URL='http://127.0.0.1:5551' \
            -e OPERATOR_ID_MAIN='0.0.1002' \
            -e OPERATOR_KEY_MAIN='302e020100300506032b65700422042077d69b53642d0000000000000000000000000000000000000000000000000000' \
            -e READ_ONLY='true' \
            -d -p 7546:7546 --name relay relay:latest

      - name: Test server
        run: |
          sleep 15  # Wait for the server to start
          
          # Check if container is running
          docker ps -a
          
          # Check container logs
          echo "=== Container Logs ==="
          docker logs relay
          echo "======================"
          
          response=$(curl -s http://localhost:7546/health/liveness)
          if [ "$response" = "OK" ]; then
            echo "Server responded with 'OK'. Test passed!"
            exit 0
          else
            echo "Server responded with '$response'. Test failed!"
            exit 1
          fi

      - name: Stop server
        if: always()
        run: |
          docker stop relay
          docker rm relay
