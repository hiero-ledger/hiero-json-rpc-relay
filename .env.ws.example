# Hedera JSON RPC Relay - WebSocket Server Configuration Example
# This file contains configuration for the WebSocket JSON-RPC server

# ========== REQUIRED CONFIGURATION ==========
# Network Configuration
CHAIN_ID=                        # The network chain id. Local/previewnet = 0x12a (298), Previewnet = 0x129 (297), Testnet = 0x128 (296), Mainnet = 0x127 (295)
HEDERA_NETWORK=                  # Which network to connect to. Can be: previewnet, testnet, mainnet or a map of IPs and nodes e.g. {"127.0.0.1:50211":"0.0.3"}
MIRROR_NODE_URL=                 # The Mirror Node API endpoint

# Operator Account (Required for transaction execution)
OPERATOR_ID_MAIN=                # Operator account ID used to pay for transactions e.g. 0.0.1001
OPERATOR_KEY_MAIN=               # Operator private key used to sign transactions in hex encoded DER format
# OPERATOR_KEY_FORMAT=DER        # Optional. Operator private key format. Valid types: DER, HEX_ECDSA, or HEX_ED25519

# WebSocket Configuration
SUBSCRIPTIONS_ENABLED=true       # Must be true for the WebSocket server to function properly

# ========== WEBSOCKET SERVER SETTINGS ==========
# WEB_SOCKET_PORT=8546           # Port for WebSocket connections
# WEB_SOCKET_HTTP_PORT=8547      # Port for HTTP server (metrics and health endpoints)
# WS_CONNECTION_LIMIT=10         # Maximum concurrent WebSocket connections allowed
# WS_CONNECTION_LIMIT_PER_IP=10  # Maximum connections from a single IP address
# WS_MAX_INACTIVITY_TTL=300000   # Time (ms) a WebSocket connection can stay open without activity (5 min default)
# WS_PING_INTERVAL=100000        # Interval between ping messages (set to 0 to disable)

# ========== SUBSCRIPTION CONFIGURATION ==========
# WS_SUBSCRIPTION_LIMIT=10       # Maximum subscriptions per single connection
# WS_MULTIPLE_ADDRESSES_ENABLED=false # Allow subscription to multiple contract addresses
# WS_NEW_HEADS_ENABLED=true      # Enable subscriptions for latest blocks
# WS_SAME_SUB_FOR_SAME_EVENT=true # Return same subscription ID for same event from single connection
# WS_POLLING_INTERVAL=500        # Time (ms) between each poll to mirror node for subscriptions
# WS_RELAY_URL=ws://127.0.0.1:8546 # URL for relay WebSocket server

# ========== CACHE & BATCH CONFIGURATION ==========
# WS_CACHE_TTL=20000             # Time to live for cached WebSocket entries
# WS_BATCH_REQUESTS_ENABLED=true # Enable batch requests on WebSocket server
# WS_BATCH_REQUESTS_MAX_SIZE=20  # Maximum requests allowed in a batch on WebSocket server

# ========== MIRROR NODE CONFIGURATION ==========
# MIRROR_NODE_RETRIES=0          # Max retries for mirror node GET requests
# MIRROR_NODE_RETRY_DELAY=2000   # Delay in ms between retry requests
# MIRROR_NODE_TIMEOUT=10000      # Max time to wait for mirror node response
# MIRROR_NODE_LIMIT_PARAM=100    # Custom limit value for GET requests
# MIRROR_NODE_URL_HEADER_X_API_KEY= # API key for mirror node authentication
# MIRROR_NODE_URL_WEB3=          # Optional separate URL for Web3 endpoints
# MIRROR_NODE_AGENT_CACHEABLE_DNS=true # Enable DNS caching for mirror node

# ========== ETH CALL CONFIGURATION ==========
# CONSENSUS_MAX_EXECUTION_TIME=15000 # Max time in ms before TIMEOUT error
# SDK_REQUEST_TIMEOUT=10000      # Timeout for SDK execute() method
# CONTRACT_QUERY_TIMEOUT_RETRIES=3 # Maximum retries for failed contract call queries

# ========== REDIS CONFIGURATION ==========
# REDIS_ENABLED=true             # Enable Redis as shared cache
# REDIS_URL=redis://127.0.0.1:6379 # Redis connection URL
# REDIS_RECONNECT_DELAY_MS=1000  # Delay between reconnect retries
# MULTI_SET=false                # Implementation for setting multiple K/V pairs

# ========== OTHER SETTINGS ==========
# CLIENT_TRANSPORT_SECURITY=false # Enable or disable TLS for both networks
# USE_ASYNC_TX_PROCESSING=true   # If true, returns tx hash immediately after prechecks
# DEV_MODE=false                 # Developer optimization mode
# LOG_LEVEL=trace                # Logging level (trace, debug, info, warn, error, fatal)
 