# Default values for json-rpc-relay.
affinity: {}

autoscaling:
  # need to test
  enabled: false
  minReplicas: 2
  maxReplicas: 6
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# For full reference and defaults see .env.http.example
config:
  # Network Configuration
  CHAIN_ID: ''
  HEDERA_NETWORK: ''
  MIRROR_NODE_URL: ''

  # Operator Account (Required for transaction execution)
  OPERATOR_ID_MAIN: ''
  OPERATOR_KEY_MAIN: ''
  # OPERATOR_KEY_FORMAT:

  # ========== NETWORK & CONNECTION SETTINGS ==========
  SERVER_PORT: 7546
  # SERVER_HOST:
  # SERVER_REQUEST_TIMEOUT_MS:
  # CLIENT_TRANSPORT_SECURITY:

  # ========== ETHEREUM API CONFIGURATION ==========
  # DEBUG_API_ENABLED:
  # FILTER_API_ENABLED:
  # ESTIMATE_GAS_THROWS:
  # SUBSCRIPTIONS_ENABLED:

  # ========== BATCH REQUESTS ==========
  # BATCH_REQUESTS_ENABLED:
  # BATCH_REQUESTS_MAX_SIZE:
  # REQUEST_ID_IS_OPTIONAL:
  # INPUT_SIZE_LIMIT:

  # ========== ETH CALL CONFIGURATION ==========
  # CONTRACT_CALL_GAS_LIMIT:
  # ETH_CALL_CACHE_TTL:
  # ETH_CALL_DEFAULT_TO_CONSENSUS_NODE:
  # ETH_CALL_ACCEPTED_ERRORS:
  # ETH_CALL_CONSENSUS_SELECTORS:

  # ========== FEE & GAS CONFIGURATION ==========
  # GAS_PRICE_TINY_BAR_BUFFER:
  # GAS_PRICE_PERCENTAGE_BUFFER:
  # ETH_FEE_HISTORY_FIXED:
  # FEE_HISTORY_MAX_RESULTS:
  # TX_DEFAULT_GAS:
  # MAX_TRANSACTION_FEE_THRESHOLD:

  # ========== CACHE CONFIGURATION ==========
  # CACHE_MAX:
  # CACHE_TTL:
  # ETH_BLOCK_NUMBER_CACHE_TTL_MS:
  # ETH_GET_BALANCE_CACHE_TTL_MS:
  # ETH_GET_GAS_PRICE_CACHE_TTL_MS:
  # ETH_GET_TRANSACTION_COUNT_CACHE_TTL:

  # ========== RATE LIMITING ==========
  # RATE_LIMIT_DISABLED:
  # DEFAULT_RATE_LIMIT:
  # TIER_1_RATE_LIMIT:
  # TIER_2_RATE_LIMIT:
  # TIER_3_RATE_LIMIT:
  # LIMIT_DURATION:

  # ========== HBAR RATE LIMITING ==========
  # HBAR_RATE_LIMIT_TINYBAR:
  # HBAR_RATE_LIMIT_DURATION:
  # HBAR_RATE_LIMIT_BASIC:
  # HBAR_RATE_LIMIT_EXTENDED:
  # HBAR_RATE_LIMIT_PRIVILEGED:
  # HBAR_SPENDING_PLANS_CONFIG:

  # ========== MIRROR NODE CONFIGURATION ==========
  # MIRROR_NODE_RETRIES:
  # MIRROR_NODE_RETRY_DELAY:
  # MIRROR_NODE_TIMEOUT:
  # MIRROR_NODE_LIMIT_PARAM:
  # MIRROR_NODE_URL_HEADER_X_API_KEY:
  # MIRROR_NODE_URL_WEB3:
  # MIRROR_NODE_AGENT_CACHEABLE_DNS:
  # MIRROR_NODE_HTTP_KEEP_ALIVE:
  # MIRROR_NODE_HTTP_KEEP_ALIVE_MSECS:
  # MIRROR_NODE_HTTP_MAX_SOCKETS:
  # MIRROR_NODE_HTTP_MAX_TOTAL_SOCKETS:
  # MIRROR_NODE_HTTP_SOCKET_TIMEOUT:
  # MIRROR_NODE_MAX_REDIRECTS:
  # MIRROR_NODE_RETRY_CODES:
  # MIRROR_NODE_RETRIES_DEVMODE:
  # MIRROR_NODE_RETRY_DELAY_DEVMODE:
  # MIRROR_NODE_CONTRACT_RESULTS_PG_MAX:
  # MIRROR_NODE_CONTRACT_RESULTS_LOGS_PG_MAX:
  # MIRROR_NODE_REQUEST_RETRY_COUNT:

  # ========== DATA RETRIEVAL & LIMITS ==========
  # ETH_GET_LOGS_BLOCK_RANGE_LIMIT:
  # ETH_GET_TRANSACTION_COUNT_MAX_BLOCK_RANGE:
  # ETH_GET_BLOCK_BY_RESULTS_BATCH_SIZE:
  # MAX_BLOCK_RANGE:
  # GET_RECORD_DEFAULT_TO_CONSENSUS_NODE:
  # CONSENSUS_MAX_EXECUTION_TIME:
  # SDK_REQUEST_TIMEOUT:
  # SEND_RAW_TRANSACTION_SIZE_LIMIT:
  # FILE_APPEND_CHUNK_SIZE:
  # FILE_APPEND_MAX_CHUNKS:
  # USE_ASYNC_TX_PROCESSING:
  # CONTRACT_QUERY_TIMEOUT_RETRIES:

  # ========== HAPI CLIENT CONFIGURATION ==========
  # HAPI_CLIENT_TRANSACTION_RESET:
  # HAPI_CLIENT_DURATION_RESET:
  # HAPI_CLIENT_ERROR_RESET:
  # HEDERA_SPECIFIC_REVERT_STATUSES:

  # ========== REDIS CONFIGURATION ==========
  REDIS_ENABLED: false
  # REDIS_URL:
  # REDIS_RECONNECT_DELAY_MS:
  # MULTI_SET:

  # ========== DEVELOPMENT & TESTING ==========
  # DEV_MODE:
  # LOG_LEVEL: 'trace'

# -- Extra environment variables from existing secrets or configmaps
extraEnvFrom: []
# - secretRef:
#     name: "{{ .Release.Name }}-env"

# Redis integration - these settings override any manually configured Redis settings
# when Redis is enabled via the parent chart
redis:
  # When true, automatically sets REDIS_ENABLED=true and
  # REDIS_URL=redis://<release-name>-redis-master:6379
  autoconfig: true

cronjob:
  enabled: false
  image:
    pullPolicy: IfNotPresent
    repository: postman/newman
    tag: 5.3.1-alpine
  # Custom postman.json in base64 encoding
  postman: ''
  schedule: '@daily'

fullnameOverride: ''

global:
  namespaceOverride: ''

image:
  pullPolicy: IfNotPresent
  registry: ghcr.io
  repository: hiero-ledger/hiero-json-rpc-relay
  # Overrides the image tag whose default is the chart appVersion.
  tag: ''

imagePullSecrets: []

ingress:
  enabled: false
  className: ''
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

livenessProbe:
  failureThreshold: 5
  httpGet:
    path: /health/liveness
    port: jsonrpcrelay
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 5

nameOverride: ''

nodeSelector: {}

podAnnotations: {}

podSecurityContext:
  fsGroup: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile:
    type: RuntimeDefault

ports:
  name: jsonrpcrelay
  containerPort: 7546

replicaCount: 2

resources:
  limits:
    cpu: 1100m
    memory: 700Mi
  requests:
    cpu: 1100m
    memory: 350Mi

# Enable rolling_restarts if SDK calls fail this is usually due to stale connections that get cycled on restart
rolling_restart:
  enabled: false
  schedule: '@daily'

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

service:
  type: ClusterIP
  port: 7546
  annotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ''

tolerations: []

readinessProbe:
  failureThreshold: 5
  httpGet:
    path: /health/readiness
    port: jsonrpcrelay
  initialDelaySeconds: 20
  timeoutSeconds: 5

test:
  enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: postman/newman
    tag: 5.3.1-alpine
  # Custom postman.json in base64 encoding
  postman: ''

terminationGracePeriodSeconds: 60

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 10%
    maxUnavailable: 25%
